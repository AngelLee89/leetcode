public class Solution {//O(n) & O(1)
    public boolean isNumber(String s) {
        int i = 0, n = s.length();
        boolean isNumeric = false;
        //part 1
        while (i < n && s.charAt(i) == ' ') {
            i++;
        }
        
        if (i < n && (s.charAt(i) == '+' || s.charAt(i) == '-')) {//i < n, add ()
            i++;
        }
        //p2
        while (i < n && Character.isDigit(s.charAt(i))) {//for the case 3 : outside if()
            i++;
            isNumeric = true;
        }
        
        if (i < n && s.charAt(i) == '.') {
            i++;
        }
        //p3
        while (i < n && Character.isDigit(s.charAt(i))) {//inside or outside above if
            i++;
            isNumeric = true;
        }
        //p4
        if (isNumeric && i < n && s.charAt(i) == 'e') {//isNumeric for case : e9
            i++;
            isNumeric = false;
            
            if (i < n && (s.charAt(i) == '+' || s.charAt(i) == '-')) {//case : 0e
                i++;
            }
            
            while (i < n && Character.isDigit(s.charAt(i))) {
                i++;
                isNumeric = true;
            }
        }
        //p5
        while (i < n && s.charAt(i) == ' ') {
            i++;
        }
        
        return i == n && isNumeric;
    }
}
